[{"id":0,"item":"const clip_cpy = spawn('/opt/gui/clip_cpy');"},{"id":1,"item":"const clip_cpy = spawn('/opt/gui/clip_cpy');\n\n    // Listen for any errors\n    clip_cpy.on('error', (err) => {\n        console.error('Failed to start clip_cpy:', err);\n        console.log(\"Cat\")\n        // You may want to handle this error more gracefully, like showing an error dialog\n    });\n\n    // Listen for clip_cpy output\n    clip_cpy.stdout.on('data', (data) => {\n        console.log(`clip_cpy output: ${data}`);\n        console.log(\"Cat\")\n\n        // Handle the output as needed\n    });"},{"id":2,"item":"const { spawn } = require('child_process');\n"},{"id":3,"item":"const { spawn } = require('child_process');\n"},{"id":4,"item":"\n            const clip_cpy = spawn(\"/opt/gui/clip_cpy\");\n"},{"id":5,"item":"const clip_cpy = spawn(\"/opt/gui/clip_cpy\");\n\n            // Listen for any errors\n            clip_cpy.on(\"error\", (err) => {\n                console.error(\"Failed to start clip_cpy:\", err);\n                console.log(\"Cat\");\n                // You may want to handle this error more gracefully, like showing an error dialog\n            });\n\n            // Listen for clip_cpy output\n            clip_cpy.stdout.on(\"data\", (data) => {\n                console.log(`clip_cpy output: ${data}`);\n                console.log(\"Cat\");\n\n                // Handle the output as needed\n            });"},{"id":6,"item":"error) {\n        console.error(\"Error getting clipboard data:\", error);\n        // Handle error"},{"id":7,"item":"ddEventListener(\"DOMContentLoaded\", () => {\n    document.addEventListener(\"mousemove\", (event) => {\n        if (event.clientY < 10) {\n            ipcRenderer.send(\"show-menu\");"},{"id":8,"item":"      ipcRenderer.send(\"show-menu\");\n        } else {\n            ipcRenderer.send(\"hide-menu\");\n        }"},{"id":9,"item":"sole.error(\"Error getting clipboard data:\", error);\n        // Handle error\n    } else {\n        console.log(\"Clipbo"},{"id":10,"item":" })\n                        .catch((err) => {\n                            console.error("},{"id":11,"item":" })\n                        .catch((err) => {\n                            console.error("},{"id":12,"item":" })\n                        .catch((err) => {\n                            console.error("},{"id":13,"item":" {\n            ipcRenderer.send(\"hid"},{"id":14,"item":"     const clip_cpy = spawn(\"/opt/gui/clip_cpy\");\n\n            // Listen for any errors\n            clip_cpy.on(\"error\", (err) => {\n                console.error(\"Failed to start "},{"id":15,"item":"     const clip_cpy = spawn(\"/opt/gui/clip_cpy\");\n\n            // Listen for any errors\n            clip_cpy.on(\"error\", (err) => {\n                console.error(\"Failed to start "},{"id":16,"item":"       clip_cpy:\", err);\n"},{"id":17,"item":"lip_cpy.on(\"error\", (err) => {\n                console.error(\"Failed to start clip_cpy:\", err);\n                console.log(\"Cat\");\n                // You may want to handle this error more gracefully, like showing an error dialog\n            });"},{"id":18,"item":"lip_cpy.on(\"error\", (err) => {\n                console.error(\"Failed to start clip_cpy:\", err);\n                console.log(\"Cat\");\n                // You may want to handle this error more gracefully, like showing an error dialog\n            });"},{"id":19,"item":"lip_cpy.on(\"error\", (err) => {\n                console.error(\"Failed to start clip_cpy:\", err);\n                console.log(\"Cat\");\n                // You may want to handle this error more gracefully, like showing an error dialog\n            });"},{"id":20,"item":"     console.log(\"Cat\");\n\n            //     // Handle the output as needed\n            // });\n        }\n    });"},{"id":21,"item":"for clip_cpy output\n            // clip_cpy.stdout.on(\"data\", (data) => {\n            //     console.log(`clip_cpy output: ${data}`);\n            //     console.log(\"Cat\");"},{"id":22,"item":"  //     console.log(\"Cat\");\n            //     // You may want to handle this error more gracefully, like showing an error dialog\n            // });\n\n            // // Listen for clip_cpy output\n            // clip_cpy.stdout.on(\"data\", (data) => {\n            //     console.log(`clip_cpy output: $"},{"id":23,"item":"  //     console.log(\"Cat\");\n            //     // You may want to handle this error more gracefully, like showing an error dialog\n            // });\n\n            // // Listen for clip_cpy output\n            // clip_cpy.stdout.on(\"data\", (data) => {\n            //     console.log(`clip_cpy output: $"},{"id":24,"item":"  //     console.log(\"Cat\");\n            //     // You may want to handle this error more gracefully, like showing an error dialog\n            // });\n\n            // // Listen for clip_cpy output\n            // clip_cpy.stdout.on(\"data\", (data) => {\n            //     console.log(`clip_cpy output: $"},{"id":25,"item":"           //     console.log(\"Cat\");\n            //     // You may want to handle this error more gracefully, like showing an error dialog\n            // });\n\n            // // Listen for clip_cpy output\n            // clip_cpy.stdout.on(\"data\", (data) => {\n            //     console.log(`clip_cpy output: ${data}`);\n            //     console.log(\"Cat\");\n\n            //     // Handle the output as needed\n            // });\n        }\n    });"},{"id":26,"item":"           //     console.log(\"Cat\");\n            //     // You may want to handle this error more gracefully, like showing an error dialog\n            // });\n\n            // // Listen for clip_cpy output\n            // clip_cpy.stdout.on(\"data\", (data) => {\n            //     console.log(`clip_cpy output: ${data}`);\n            //     console.log(\"Cat\");\n\n            //     // Handle the output as needed\n            // });\n        }\n    });"},{"id":27,"item":"           //     console.log(\"Cat\");\n            //     // You may want to handle this error more gracefully, like showing an error dialog\n            // });\n\n            // // Listen for clip_cpy output\n            // clip_cpy.stdout.on(\"data\", (data) => {\n            //     console.log(`clip_cpy output: ${data}`);\n            //     console.log(\"Cat\");\n\n            //     // Handle the output as needed\n            // });\n        }\n    });"},{"id":28,"item":"\nlet menu = null;\nlet mainWindow;\n\nfunction createWindow() {"},{"id":29,"item":"{\n            nodeIntegration: true,\n            contextIsolation: false,\n            preload: path.join(__dirname, \"preload.js\"),\n        },\n    });\n\n    mainWindow.loadFile(\"index.html\");\n"},{"id":30,"item":"    console.log(\"Cat\");\n                // You may want to handle this error more gracefully, like showing an error dialog\n            });\n\n            // Listen for clip_cpy output\n            clip_cpy.stdout.on(\"data\", (data) => {\n                console.log(`clip_cpy output: ${data}`);\n                console.log(\"Cat\");\n\n                // Handle the output as needed\n            });"},{"id":31,"item":"enderer.send(\"hide-menu\");\n\n            const clip_cpy = spawn(\"/opt/gui/clip_cpy\");\n\n            // Listen for any errors\n            clip_cpy.on(\"error\", (err) => {\n                console.error(\"Fail"},{"id":32,"item":"\n            // Listen for any errors\n            clip_cpy.on(\"error\", (err) => {\n                console.error(\"Failed to start clip_cpy:\", err);\n                console.log(\"Cat\");\n                // You may want to handle this error more gracefully, like showing an error dialog\n            });\n\n            // Listen for clip_cpy output\n            clip_cpy.stdout.on(\"data\", (data) =>"},{"id":33,"item":"\n\n            // Listen for clip_cpy output\n            clip_cpy.stdout.on(\"data\", (data) => {\n                console.log(`clip_cpy output: ${data}`);\n                console.log(\"Cat\");\n\n                // Handle the output as needed\n            });\n        }\n    });\n});\n\n// Function to render JSON data\nfunction renderJSON(data) {\n    const jsonData = JSON.parse(data);"},{"id":34,"item":"           // You may want to handle this error more gracefully, like showing an error dialog\n            });\n\n            // Listen for clip_cpy output\n            clip_cpy.stdout.on(\"data\", (data) => {\n                console.log(`clip_cpy output: ${data}`);\n                console.log(\"Cat\");\n\n                // Handle the output as needed\n            });\n        }\n    });\n});\n\n// Function to render JSON data\nfunction renderJSON(data) {"},{"id":35,"item":" });\n\n            // Listen for clip_cpy output\n            clip_cpy.stdout.on(\"data\", (data) => {\n                console.log(`clip_cpy output: ${data}`);\n                console.log(\"Cat\");\n\n                // Handle the output as needed\n            });\n        }\n    });\n});\n\n// Function to render JSON data"},{"id":36,"item":"der JSON data\nfunction renderJSON(data) {"},{"id":37,"item":"ole.log(`clip_cpy output: ${data}`);\n            //     console.log(\"Cat\");\n\n            //     // Handle the "},{"id":38,"item":"log(\"Cat\");\n            //     // You may want to handle this error more gracefully, like showing an error dialog\n            // });\n\n            // // Listen for clip_cpy o"},{"id":39,"item":"console.log(\"Cat\");\n\n                // Handle the output as needed\n            });"},{"id":40,"item":"hrough each object in the JSON data in reverse order\n    for (let key of keys) {\n        if (jsonData.hasOwnProperty(key)) {\n            // Extract the \"name\" field from the object\n            const item ="},{"id":41,"item":"onData = JSON.parse(data);\n    const container = document.getElementById(\"json-container\");\n    container.innerHTML = \"\"; // Clear previous content\n\n    // Get the keys of JSO"},{"id":42,"item":"n for clip_cpy output\n            clip_cpy.stdout.on(\"data\", (data) => {\n                console.log(`clip_cpy output: ${data}`);\n                console.log(\"Cat\");\n\n                // Handle the "},{"id":43,"item":"     // Listen for clip_cpy output\n            clip_cpy.stdout.on(\"data\", (data) => {\n                console.log(`clip_cpy output: ${data}`);\n                console.log(\"Cat\");\n\n                // Handle the output as needed\n            });"},{"id":44,"item":"\n            // Listen for clip_cpy output\n            clip_cpy.stdout.on(\"data\", (data) => {\n                console.log(`clip_cpy output: ${data}`);\n                console.log(\"Cat\");\n\n                // Handle the output as needed\n            });"},{"id":45,"item":"\n            // Listen for clip_cpy output\n            clip_cpy.stdout.on(\"data\", (data) => {\n                console.log(`clip_cpy output: ${data}`);\n                console.log(\"Cat\");\n\n                // Handle the output as needed\n            });\n        }"},{"id":46,"item":" const clip_cpy = spawn(\"/opt/gui/clip_cpy\");\n\n            // Listen for any errors\n            clip_cpy.on(\"error\", (err) => {\n                console.error(\"Failed to start clip_cpy:\", err);\n                console.log(\"Cat\");\n                // You may want to handle this error more gracefully, like showing an error dialog\n            });\n\n            // Listen for clip_cpy output\n            clip_cpy.stdout.on(\"data\", (data) => {\n                console.log(`clip_cpy output: ${data}`);\n                console.log(\"Cat\");\n\n                // Handle the output as needed\n            });"},{"id":47,"item":"\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    document.addEventListener(\"mousemove\", (event) => {\n        if (event.clientY < 10) {\n            ipcRenderer.send(\"show-menu\");"},{"id":48,"item":"\n        console.log(\"Clipboard data:\", data);\n        // Render the clipboard data\n        renderJSON(data);"},{"id":49,"item":"\n        console.error(\"Error getting clipboard data:\", error);\n        // Handle error"},{"id":50,"item":"cpy output: ${data}`);\n    console.log(\"Cat\");\n\n    // Handle the output as needed\n});\n"},{"id":51,"item":"cpy output: ${data}`);\n    console.log(\"Cat\");\n\n    // Handle the output as needed"},{"id":52,"item":"n for clip_cpy output\nclip_cpy.stdout.on(\"data\", (data) => {\n    console.log(`clip_cpy output: ${data}`);\n    console.log(\"Cat\");\n\n    // Handle the output as needed\n});"},{"id":53,"item":"data) => {\n    console.log(`clip_cpy output: ${data}`);\n    console.log(\"Cat\");\n\n    // Handle the output as needed"},{"id":54,"item":"tput\nclip_cpy.stdout.on(\"data\", (data) => {\n    console.log(`clip_cpy output: ${data}`);\n    console.log(\"Cat\");\n\n    // Handle the output as needed\n});"},{"id":55,"item":"=> {\n    console.log(`clip_cpy output: ${data}`);\n    console.log(\"Cat\");\n\n    // Handle the output as needed\n});"},{"id":56,"item":"ata}`);\n    console.log(\"Cat\");\n\n    // Handle the output as needed\n});"},{"id":57,"item":"fn save_id_counter(id_counter: usize) {\n    let path = \"id_counter.txt\";\n    let mut file = File::create(path).expect(\"Failed to create id_counter.txt\");\n    write!(file, \"{}\", id_counter).expect(\"Failed to write id_counter.txt\");\n}\n\nfn append_to_json(clipboard_item: &ClipboardItem) -> io::Result<()> {\n    let path = \"clipboard.json\";\n\n    let mut file = OpenOptions::new()\n        .read(true)\n        .write(true)\n        .create(true)\n        .append(true)\n        .open(path)?;\n\n    let mut json_data = String::new();\n    file.read_to_string(&mut json_data)?;\n\n    let mut parsed_json: Value = if json_data.trim().is_empty() {\n        // If the file is empty, initialize it with an empty JSON array\n        json!([])\n    } else {\n        // Parse existing JSON data into a serde_json::Value\n        serde_json::from_str(&json_data)?\n    };\n\n    let new_entry = json!({\n        \"id\": clipboard_item.id,\n        \"item\": clipboard_item.content,\n    });\n\n    parsed_json.as_array_mut().unwrap().push(new_entry);\n\n    let updated_json = serde_json::to_string(&parsed_json)?;\n\n    file.seek(SeekFrom::Start(0))?;\n    file.set_len(0)?;\n    file.write_all(updated_json.as_bytes())?;\n\n    Ok(())\n}"},{"id":58,"item":"/home/ritu/Documents/RustyBun"},{"id":59,"item":"    let path = \"/home/ritu/Documents/RustyBun/id_counter.txt\"; // Absolute path\n"},{"id":60,"item":"    let path = \"/home/ritu/Documents/RustyBun/clipboard.json\"; // Absolute path\n"}]